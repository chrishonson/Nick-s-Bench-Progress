What is the primary purpose of Amazon ECR (Elastic Container Registry)?<br>A) To run containerized applications<br>B) To store and manage Docker container images<br>C) To orchestrate container deployments<br>D) To monitor container performance	<b>B) To store and manage Docker container images</b><br>ECR is a fully managed Docker container registry that makes it easy to store, manage, and deploy Docker container images securely and at scale.

What is the main difference between ECS EC2 launch type and ECS Fargate launch type?<br>A) EC2 is cheaper, Fargate is faster<br>B) EC2 requires you to manage the underlying infrastructure, Fargate is serverless<br>C) EC2 supports more container runtimes<br>D) Fargate only works with specific container sizes	<b>B) EC2 requires you to manage the underlying infrastructure, Fargate is serverless</b><br>With EC2 launch type, you manage the EC2 instances that run your containers. With Fargate, AWS manages the infrastructure and you only specify CPU and memory requirements.

What is an ECS Task Definition?<br>A) A running instance of a containerized application<br>B) A blueprint that describes how containers should run, including CPU, memory, and networking<br>C) A load balancer configuration for containers<br>D) A security policy for container access	<b>B) A blueprint that describes how containers should run, including CPU, memory, and networking</b><br>A Task Definition is like a blueprint that specifies which Docker images to use, CPU/memory requirements, networking mode, IAM roles, and logging configuration.

What is the difference between an ECS Task and an ECS Service?<br>A) Tasks are permanent, Services are temporary<br>B) Tasks are single instances, Services maintain a desired number of running tasks<br>C) Tasks use more memory than Services<br>D) Services can only run one container	<b>B) Tasks are single instances, Services maintain a desired number of running tasks</b><br>A Task is a single running instance of a Task Definition. A Service ensures a specified number of tasks are always running and can replace failed tasks automatically.

What authentication method does Docker use to access Amazon ECR?<br>A) Username and password<br>B) AWS IAM credentials and temporary tokens<br>C) SSH keys<br>D) API keys only	<b>B) AWS IAM credentials and temporary tokens</b><br>ECR uses AWS IAM for authentication. You must use 'aws ecr get-login-password' to get a temporary token that Docker uses to authenticate with ECR.

Which networking mode allows ECS containers to have their own elastic network interface (ENI)?<br>A) Bridge mode<br>B) Host mode<br>C) awsvpc mode<br>D) None mode	<b>C) awsvpc mode</b><br>The awsvpc network mode gives each task its own elastic network interface (ENI) with a private IP address, providing better network isolation and security.

What is the maximum number of containers you can define in a single ECS Task Definition?<br>A) 5<br>B) 10<br>C) 15<br>D) 20	<b>B) 10</b><br>An ECS Task Definition can contain up to 10 container definitions, allowing you to run multiple related containers as a single unit.

What happens when you delete a Docker image from ECR that is currently being used by running ECS tasks?<br>A) The running tasks immediately fail<br>B) The running tasks continue to run, but new tasks cannot be started<br>C) ECR prevents deletion of images in use<br>D) The image is automatically restored	<b>B) The running tasks continue to run, but new tasks cannot be started</b><br>Running containers continue to function because they already have the image locally, but new task instances cannot be started until the image is available again.

Which ECS feature automatically replaces failed tasks to maintain the desired number of running tasks?<br>A) Task Definition<br>B) ECS Cluster<br>C) ECS Service<br>D) Container Instance	<b>C) ECS Service</b><br>ECS Services monitor the health of tasks and automatically replace failed tasks to maintain the desired count, providing high availability for containerized applications.

What is required to run containers on ECS Fargate?<br>A) Pre-configured EC2 instances<br>B) Only Task Definition with CPU and memory specifications<br>C) Docker Swarm cluster<br>D) Kubernetes configuration	<b>B) Only Task Definition with CPU and memory specifications</b><br>Fargate is serverless, so you only need to specify your Task Definition with CPU and memory requirements. AWS handles all the underlying infrastructure automatically. 