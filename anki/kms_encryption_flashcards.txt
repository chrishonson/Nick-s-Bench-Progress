What is the primary purpose of AWS KMS (Key Management Service)?<br>A) To store and manage application secrets<br>B) To create, manage, and control cryptographic keys<br>C) To encrypt S3 buckets automatically<br>D) To monitor key usage	<b>B) To create, manage, and control cryptographic keys</b><br>AWS KMS is a managed service that makes it easy to create and control the encryption keys used to encrypt your data.

What is a Customer Master Key (CMK) in AWS KMS?<br>A) A key used to encrypt customer data directly<br>B) A logical representation of a master key that can encrypt/decrypt data up to 4KB or generate data keys<br>C) A key shared between AWS and the customer<br>D) A key used exclusively for S3 encryption	<b>B) A logical representation of a master key that can encrypt/decrypt data up to 4KB or generate data keys</b><br>CMKs are the primary resources in KMS. They are logical keys that can be used to encrypt or decrypt small amounts of data directly, or to generate, encrypt, and decrypt data keys.

What is Envelope Encryption?<br>A) Encrypting data multiple times with different keys<br>B) Encrypting the encryption key itself<br>C) Encrypting data with a data key, and then encrypting the data key with a master key (like a CMK)<br>D) Using a physical envelope to store keys	<b>C) Encrypting data with a data key, and then encrypting the data key with a master key (like a CMK)</b><br>Envelope encryption is a common practice where a data key is used to encrypt the data itself, and then that data key is encrypted by a master key (CMK in KMS). This protects the data key.

What are the three types of CMKs available in AWS KMS?<br>A) AWS Managed CMK, Customer Managed CMK, S3 Managed CMK<br>B) AWS Managed CMK, Customer Managed CMK, AWS Owned CMK<br>C) Symmetric CMK, Asymmetric CMK, Imported CMK<br>D) AWS Managed CMK, Customer Managed CMK, CloudHSM CMK (Custom Key Store)	<b>D) AWS Managed CMK, Customer Managed CMK, CloudHSM CMK (Custom Key Store)</b><br>KMS offers AWS Managed CMKs (used by AWS services), Customer Managed CMKs (created and managed by you), and the ability to create CMKs in a custom key store backed by your AWS CloudHSM cluster. (Note: AWS Owned CMKs are a fourth type, but less commonly managed by users directly).

Which type of KMS CMK allows you to import your own key material?<br>A) AWS Managed CMK<br>B) Customer Managed CMK (with imported key material option)<br>C) CloudHSM CMK<br>D) AWS Owned CMK	<b>B) Customer Managed CMK (with imported key material option)</b><br>You can create a Customer Managed CMK without key material and then import your own key material, giving you more control over the key's origin.

What is the main difference between Symmetric and Asymmetric CMKs in KMS?<br>A) Symmetric keys are faster, Asymmetric keys are more secure<br>B) Symmetric keys use the same key for encryption and decryption; Asymmetric keys use a public key to encrypt and a private key to decrypt<br>C) Symmetric keys can be imported, Asymmetric keys cannot<br>D) Symmetric keys are only for S3, Asymmetric keys are for EC2	<b>B) Symmetric keys use the same key for encryption and decryption; Asymmetric keys use a public key to encrypt and a private key to decrypt</b><br>Symmetric CMKs use a single 256-bit key for both encryption and decryption. Asymmetric CMKs use mathematically related public and private key pairs.

How does AWS KMS integrate with IAM for access control?<br>A) KMS has its own separate access control system<br>B) Access to CMKs is controlled through Key Policies and optionally IAM policies<br>C) Only the root account can manage KMS keys<br>D) IAM roles cannot be used with KMS	<b>B) Access to CMKs is controlled through Key Policies and optionally IAM policies</b><br>Key policies are the primary way to control access to CMKs. IAM policies can be used in conjunction with key policies to grant permissions, but the key policy must allow it.

What is the purpose of a KMS Key Policy?<br>A) To define how often a key should be rotated<br>B) To specify which IAM users and roles can use or manage the CMK<br>C) To set the encryption algorithm for the key<br>D) To enable automatic key deletion	<b>B) To specify which IAM users and roles can use or manage the CMK</b><br>The key policy is a resource-based policy attached to a CMK that defines who has what permissions for that specific key.

What is automatic key rotation in AWS KMS?<br>A) Manually creating a new key and updating applications<br>B) A feature for Customer Managed CMKs where KMS automatically creates new cryptographic material for the CMK every year<br>C) Deleting old keys automatically<br>D) Changing the key alias periodically	<b>B) A feature for Customer Managed CMKs where KMS automatically creates new cryptographic material for the CMK every year</b><br>When enabled for a Customer Managed CMK, KMS generates new backing key material annually. The CMK's ARN and key ID remain the same, and KMS retains older versions to decrypt data previously encrypted.

Which AWS services can natively integrate with AWS KMS for server-side encryption?<br>A) Only S3 and EBS<br>B) S3, EBS, RDS, Lambda, and many others<br>C) Only services within a VPC<br>D) Only compute services like EC2 and Lambda	<b>B) S3, EBS, RDS, Lambda, and many others</b><br>Many AWS services integrate with KMS to provide server-side encryption using CMKs you manage or AWS managed CMKs, including S3, EBS, RDS, DynamoDB, Lambda, SQS, SNS, etc. 