What is the primary purpose of AWS Step Functions?<br>A) To store application state data<br>B) To orchestrate and coordinate multiple AWS services using visual workflows<br>C) To cache frequently accessed data<br>D) To monitor application performance	<b>B) To orchestrate and coordinate multiple AWS services using visual workflows</b><br>Step Functions is a serverless orchestration service that lets you combine AWS services into serverless workflows using visual state machines.

What language is used to define Step Functions state machines?<br>A) JSON-based Amazon States Language (ASL)<br>B) YAML<br>C) Python<br>D) JavaScript	<b>A) JSON-based Amazon States Language (ASL)</b><br>Step Functions state machines are defined using Amazon States Language (ASL), a JSON-based declarative language for defining workflows.

What are the two types of Step Functions workflows?<br>A) Synchronous and Asynchronous<br>B) Standard and Express<br>C) Sequential and Parallel<br>D) Simple and Complex	<b>B) Standard and Express</b><br>Step Functions offers Standard workflows (long-running, exactly-once execution) and Express workflows (short-duration, high-volume, at-least-once execution).

Which Step Functions state type is used to make decisions based on input values?<br>A) Task State<br>B) Wait State<br>C) Choice State<br>D) Parallel State	<b>C) Choice State</b><br>Choice State adds branching logic to state machines by comparing input values against different conditions and transitioning to different states based on the results.

What is the primary purpose of AWS AppSync?<br>A) To synchronize data between mobile devices<br>B) To provide managed GraphQL APIs with real-time data synchronization<br>C) To backup application data<br>D) To monitor API performance	<b>B) To provide managed GraphQL APIs with real-time data synchronization</b><br>AppSync is a fully managed GraphQL service that enables real-time data synchronization and offline capabilities for mobile and web applications.

Which data sources can AWS AppSync connect to?<br>A) Only DynamoDB<br>B) DynamoDB, Lambda, ElasticSearch, and HTTP APIs<br>C) Only relational databases<br>D) Only Lambda functions	<b>B) DynamoDB, Lambda, ElasticSearch, and HTTP APIs</b><br>AppSync can connect to multiple data sources including DynamoDB, Lambda functions, ElasticSearch, HTTP APIs, and RDS via HTTP endpoints.

What is a resolver in AWS AppSync?<br>A) A caching mechanism for GraphQL queries<br>B) A function that connects GraphQL fields to data sources<br>C) A security policy for API access<br>D) A monitoring tool for API performance	<b>B) A function that connects GraphQL fields to data sources</b><br>Resolvers are functions that connect GraphQL schema fields to data sources, defining how to fetch or modify data when a field is requested.

Which Step Functions state allows you to execute multiple branches of work in parallel?<br>A) Task State<br>B) Choice State<br>C) Parallel State<br>D) Map State	<b>C) Parallel State</b><br>Parallel State executes multiple branches of work simultaneously, allowing you to run tasks in parallel and wait for all branches to complete before continuing.

What authentication methods does AWS AppSync support?<br>A) Only IAM<br>B) API Keys, AWS IAM, Amazon Cognito User Pools, and OpenID Connect<br>C) Only username and password<br>D) Only OAuth 2.0	<b>B) API Keys, AWS IAM, Amazon Cognito User Pools, and OpenID Connect</b><br>AppSync supports multiple authentication methods including API Keys, AWS IAM, Amazon Cognito User Pools, and OpenID Connect providers.

What happens when a Step Functions state machine execution fails?<br>A) The entire workflow is automatically retried<br>B) Execution stops and error details are available for debugging<br>C) The failed state is skipped and execution continues<br>D) The state machine is automatically deleted	<b>B) Execution stops and error details are available for debugging</b><br>When a Step Functions execution fails, it stops at the failed state and provides detailed error information, execution history, and visual representation of where the failure occurred for debugging. 