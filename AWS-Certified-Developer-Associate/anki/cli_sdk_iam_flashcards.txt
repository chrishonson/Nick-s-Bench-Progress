What is the recommended way to provide AWS credentials to applications running on EC2 instances?<br>A) Hardcode AWS access keys in the application code<br>B) Store credentials in environment variables on the EC2 instance<br>C) Use IAM roles attached to the EC2 instance<br>D) Include credentials in configuration files	<b>C) Use IAM roles attached to the EC2 instance</b><br>IAM roles provide temporary, rotating credentials to EC2 instances automatically, eliminating the need to store long-term credentials and following security best practices.

What is the purpose of the AWS CLI (Command Line Interface)?<br>A) To provide a graphical interface for AWS services<br>B) To enable programmatic access to AWS services from the command line<br>C) To monitor AWS resource usage<br>D) To encrypt data in AWS services	<b>B) To enable programmatic access to AWS services from the command line</b><br>AWS CLI allows developers and administrators to interact with AWS services using commands, enabling automation, scripting, and programmatic access to AWS resources.

What is the difference between inline policies and managed policies in IAM?<br>A) Inline policies are encrypted, managed policies are not<br>B) Inline policies are attached directly to users/roles, managed policies are standalone and reusable<br>C) Inline policies work globally, managed policies work per region<br>D) Inline policies are free, managed policies have costs	<b>B) Inline policies are attached directly to users/roles, managed policies are standalone and reusable</b><br>Inline policies are embedded directly in users, groups, or roles, while managed policies are standalone policies that can be attached to multiple entities and are easier to manage.

What is the AWS SDK primarily used for?<br>A) Managing AWS infrastructure through a web interface<br>B) Integrating AWS services into applications using programming languages<br>C) Monitoring AWS service performance<br>D) Configuring network settings for AWS services	<b>B) Integrating AWS services into applications using programming languages</b><br>AWS SDKs provide libraries and APIs for various programming languages (Python, Java, JavaScript, etc.) to interact with AWS services programmatically within applications.

How do IAM roles differ from IAM users in terms of credentials?<br>A) Roles use permanent credentials, users use temporary credentials<br>B) Roles use temporary credentials that are automatically rotated, users have long-term access keys<br>C) Both use the same type of credentials<br>D) Roles don't use credentials, only users do	<b>B) Roles use temporary credentials that are automatically rotated, users have long-term access keys</b><br>IAM roles provide temporary, automatically rotating credentials that are assumed by applications or services, while IAM users have long-term access keys that must be manually managed. 