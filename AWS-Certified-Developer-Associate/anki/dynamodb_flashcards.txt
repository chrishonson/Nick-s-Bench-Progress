What type of database is Amazon DynamoDB?<br>A) Relational SQL database<br>B) NoSQL key-value and document database<br>C) Graph database<br>D) Time-series database	<b>B) NoSQL key-value and document database</b><br>DynamoDB is a fully managed NoSQL database service that supports both key-value and document data models, providing fast and predictable performance.

What is a partition key in DynamoDB?<br>A) A foreign key that links tables<br>B) The primary attribute used to distribute data across partitions<br>C) An encrypted field for security<br>D) A backup identifier for data recovery	<b>B) The primary attribute used to distribute data across partitions</b><br>The partition key is used by DynamoDB's internal hash function to determine which partition to store the item in, enabling horizontal scaling.

What is the difference between DynamoDB's eventually consistent and strongly consistent reads?<br>A) Eventually consistent is faster but may return stale data, strongly consistent always returns the latest data<br>B) Eventually consistent is more expensive<br>C) Strongly consistent reads are not supported<br>D) There is no difference in DynamoDB	<b>A) Eventually consistent is faster but may return stale data, strongly consistent always returns the latest data</b><br>Eventually consistent reads (default) may not reflect recent writes but are faster and cheaper. Strongly consistent reads guarantee the latest data but consume more capacity.

What are the two capacity modes available for DynamoDB tables?<br>A) Standard and Express<br>B) Provisioned and On-Demand<br>C) Basic and Premium<br>D) Manual and Automatic	<b>B) Provisioned and On-Demand</b><br>Provisioned mode requires you to specify read/write capacity units in advance. On-Demand mode automatically scales and you pay per request without capacity planning.

What is a Global Secondary Index (GSI) in DynamoDB?<br>A) A backup copy of the table in another region<br>B) An index with a different partition key and optional sort key from the base table<br>C) A security feature for global access<br>D) A compression algorithm for large items	<b>B) An index with a different partition key and optional sort key from the base table</b><br>GSIs allow you to query data using different access patterns by creating alternate partition and sort key combinations, supporting additional query requirements.

What is the maximum item size in DynamoDB?<br>A) 64 KB<br>B) 256 KB<br>C) 400 KB<br>D) 1 MB	<b>C) 400 KB</b><br>Each DynamoDB item can be up to 400 KB in size, including attribute names and values. Items larger than this must be stored in S3 with references in DynamoDB.

What is DynamoDB Streams?<br>A) A real-time backup service<br>B) A feature that captures data modification events in a table<br>C) A query optimization tool<br>D) A data compression service	<b>B) A feature that captures data modification events in a table</b><br>DynamoDB Streams capture changes (inserts, updates, deletes) to items in a table, enabling real-time processing and triggering Lambda functions.

What is the difference between Query and Scan operations in DynamoDB?<br>A) Query searches by primary key, Scan examines every item in the table<br>B) Query is slower than Scan<br>C) Scan is more cost-effective<br>D) There is no difference	<b>A) Query searches by primary key, Scan examines every item in the table</b><br>Query operations are efficient and search using partition key (and optionally sort key). Scan operations examine every item in the table and are less efficient and more expensive.

What is DynamoDB DAX?<br>A) A data archiving service<br>B) An in-memory caching service that provides microsecond latency<br>C) A database migration tool<br>D) A monitoring service	<b>B) An in-memory caching service that provides microsecond latency</b><br>DynamoDB Accelerator (DAX) is a fully managed, in-memory cache for DynamoDB that delivers up to 10x performance improvement (microsecond latency).

What is Time to Live (TTL) in DynamoDB?<br>A) The maximum time a query can run<br>B) A feature that automatically deletes items after a specified timestamp<br>C) Connection timeout for clients<br>D) Backup retention period	<b>B) A feature that automatically deletes items after a specified timestamp</b><br>TTL allows you to define when items should be automatically deleted from your table, helping reduce storage costs and manage data lifecycle.

What are DynamoDB Global Tables?<br>A) Tables with global read access<br>B) Multi-region, multi-master replication for global applications<br>C) Tables larger than 1 TB<br>D) Publicly accessible tables	<b>B) Multi-region, multi-master replication for global applications</b><br>Global Tables provide multi-region, multi-master replication, allowing fast local reads and writes in multiple AWS regions with automatic synchronization.

What is a composite primary key in DynamoDB?<br>A) A key made of multiple data types<br>B) A combination of partition key and sort key<br>C) An encrypted primary key<br>D) A key shared across multiple tables	<b>B) A combination of partition key and sort key</b><br>A composite primary key consists of both a partition key and sort key, allowing multiple items with the same partition key but different sort keys.

What happens when you exceed the provisioned throughput capacity for a DynamoDB table?<br>A) The table automatically scales up<br>B) Requests are throttled and return ProvisionedThroughputExceededException<br>C) Additional charges are applied<br>D) The table becomes read-only	<b>B) Requests are throttled and return ProvisionedThroughputExceededException</b><br>When you exceed provisioned capacity, DynamoDB throttles requests and returns a ProvisionedThroughputExceededException. Applications should implement retry logic with exponential backoff.

What is a Local Secondary Index (LSI) in DynamoDB?<br>A) An index stored on the same partition as the base table<br>B) An index that spans all partitions<br>C) A backup index for disaster recovery<br>D) An index for local development only	<b>A) An index stored on the same partition as the base table</b><br>LSIs use the same partition key as the base table but a different sort key. They must be created at table creation time and share the partition's provisioned throughput.

Which DynamoDB feature helps optimize costs by automatically adjusting capacity based on traffic patterns?<br>A) DynamoDB Streams<br>B) Auto Scaling<br>C) Global Tables<br>D) DAX	<b>B) Auto Scaling</b><br>DynamoDB Auto Scaling automatically adjusts provisioned read and write capacity based on actual traffic patterns, helping optimize costs while maintaining performance. 