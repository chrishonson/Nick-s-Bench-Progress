What is the primary purpose of AWS Elastic Beanstalk?<br>A) To store application code in version control<br>B) To provide a platform for easily deploying and managing web applications without managing infrastructure<br>C) To monitor application performance<br>D) To encrypt application data	<b>B) To provide a platform for easily deploying and managing web applications without managing infrastructure</b><br>Elastic Beanstalk is a Platform-as-a-Service (PaaS) that handles deployment, monitoring, and scaling of web applications while you focus on writing code.

Which programming languages and platforms are supported by Elastic Beanstalk?<br>A) Only Java and Python<br>B) Java, .NET, PHP, Node.js, Python, Ruby, Go, and Docker<br>C) Only web-based languages<br>D) Any language that can run in a container	<b>B) Java, .NET, PHP, Node.js, Python, Ruby, Go, and Docker</b><br>Elastic Beanstalk supports multiple platforms including Java, .NET, PHP, Node.js, Python, Ruby, Go, and Docker containers.

What is the difference between Blue/Green and Traffic Splitting deployment strategies in Elastic Beanstalk?<br>A) Blue/Green uses Route 53 DNS switching, Traffic Splitting uses ALB to gradually shift traffic<br>B) Blue/Green is faster, Traffic Splitting is safer<br>C) Blue/Green works with containers, Traffic Splitting works with VMs<br>D) They are the same strategy with different names	<b>A) Blue/Green uses Route 53 DNS switching, Traffic Splitting uses ALB to gradually shift traffic</b><br>Blue/Green deployment switches traffic via Route 53 DNS, while Traffic Splitting uses Application Load Balancer to gradually shift traffic between old and new application versions.

What happens during an Immutable deployment in Elastic Beanstalk?<br>A) Existing instances are updated in place<br>B) New instances are added to the existing Auto Scaling Group<br>C) A new Auto Scaling Group with new instances is created, then old instances are terminated<br>D) Only the application code is replaced	<b>C) A new Auto Scaling Group with new instances is created, then old instances are terminated</b><br>Immutable deployment creates entirely new instances in a new Auto Scaling Group and terminates the old instances after the new ones are healthy.

How does Elastic Beanstalk pricing work?<br>A) You pay a monthly fee for the Beanstalk service<br>B) You pay for Beanstalk plus the underlying AWS resources<br>C) You only pay for the underlying AWS resources (EC2, ELB, etc.), Beanstalk itself is free<br>D) Pricing is based on the number of deployments	<b>C) You only pay for the underlying AWS resources (EC2, ELB, etc.), Beanstalk itself is free</b><br>Elastic Beanstalk itself is free - you only pay for the underlying AWS resources like EC2 instances, load balancers, and auto scaling groups that it provisions.

What are the two types of Elastic Beanstalk environments?<br>A) Development and Production<br>B) Web Server Environment and Worker Environment<br>C) Single Instance and Load Balanced<br>D) Public and Private	<b>B) Web Server Environment and Worker Environment</b><br>Web Server Environments handle HTTP requests directly, while Worker Environments process background tasks from SQS queues.

What is the purpose of .ebextensions in Elastic Beanstalk?<br>A) To store application logs<br>B) To configure AWS resources and customize the environment beyond default settings<br>C) To compress application files<br>D) To monitor application health	<b>B) To configure AWS resources and customize the environment beyond default settings</b><br>.ebextensions are configuration files that allow you to customize your Elastic Beanstalk environment, install packages, modify settings, and configure AWS resources.

What is an Application Version in Elastic Beanstalk?<br>A) The version of the Elastic Beanstalk platform<br>B) A specific iteration of deployable code for your application<br>C) The version of the underlying operating system<br>D) A backup of your application data	<b>B) A specific iteration of deployable code for your application</b><br>An Application Version is a specific labeled iteration of your application code that can be deployed to one or more environments.

Which deployment strategy provides the fastest rollback capability in Elastic Beanstalk?<br>A) Rolling deployment<br>B) Rolling with additional batch<br>C) Blue/Green deployment<br>D) Immutable deployment	<b>C) Blue/Green deployment</b><br>Blue/Green deployment allows the fastest rollback because you can instantly switch back to the previous environment using Route 53 DNS switching.

How does Elastic Beanstalk monitor application health?<br>A) Only through CloudWatch metrics<br>B) Using health checks on a configurable URL path and CloudWatch monitoring<br>C) Manual monitoring only<br>D) Through application logs only	<b>B) Using health checks on a configurable URL path and CloudWatch monitoring</b><br>Elastic Beanstalk monitors health through configurable health check URLs (default is /) and integrates with CloudWatch for comprehensive monitoring and alerting. 